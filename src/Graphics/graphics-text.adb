package body Graphics.Text is 

type Text_Array_2D is array (Character) of Text_Array;
My_Font : constant Text_Array_2D := (
      ' ' => (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),                        
      '0' => (16#3C#, 16#66#, 16#C3#, 16#C3#, 16#C3#, 16#DB#, 16#DB#, 16#C3#, 16#C3#, 16#C3#, 16#66#, 16#3C#, 0, 0),
      '1' => (16#18#, 16#38#, 16#78#, 16#18#, 16#18#, 16#18#, 16#18#, 16#18#, 16#18#, 16#18#, 16#18#, 16#7E#, 0, 0),
      '2' => (16#7E#, 16#C3#, 16#03#, 16#03#, 16#06#, 16#0C#, 16#18#, 16#30#, 16#60#, 16#C0#, 16#C3#, 16#FF#, 0, 0),
      '3' => (16#7E#, 16#C3#, 16#03#, 16#03#, 16#03#, 16#1E#, 16#03#, 16#03#, 16#03#, 16#03#, 16#C3#, 16#7E#, 0, 0),
      '4' => (16#06#, 16#0E#, 16#1E#, 16#36#, 16#66#, 16#C6#, 16#FF#, 16#06#, 16#06#, 16#06#, 16#06#, 16#0F#, 0, 0),
      '5' => (16#FF#, 16#C0#, 16#C0#, 16#C0#, 16#C0#, 16#FE#, 16#03#, 16#03#, 16#03#, 16#03#, 16#C3#, 16#7E#, 0, 0),
      '6' => (16#3C#, 16#60#, 16#C0#, 16#C0#, 16#C0#, 16#FE#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#7E#, 0, 0),
      '7' => (16#FF#, 16#C3#, 16#03#, 16#03#, 16#06#, 16#0C#, 16#18#, 16#18#, 16#18#, 16#18#, 16#18#, 16#18#, 0, 0),
      '8' => (16#7E#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#7E#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#7E#, 0, 0),
      '9' => (16#7E#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#7F#, 16#03#, 16#03#, 16#03#, 16#03#, 16#06#, 16#7C#, 0, 0),
      '!' => (16#18#, 16#18#, 16#18#, 16#18#, 16#18#, 16#18#, 16#18#, 16#18#, 16#18#, 16#00#, 16#18#, 16#18#, 0, 0),
      'A' => (16#18#, 16#3C#, 16#66#, 16#C3#, 16#C3#, 16#C3#, 16#FF#, 16#FF#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 0, 0),
      'B' => (16#FE#, 16#63#, 16#63#, 16#63#, 16#63#, 16#7E#, 16#63#, 16#63#, 16#63#, 16#63#, 16#63#, 16#FE#, 0, 0),
      'C' => (16#3E#, 16#63#, 16#C1#, 16#C0#, 16#C0#, 16#C0#, 16#C0#, 16#C0#, 16#C0#, 16#C1#, 16#63#, 16#3E#, 0, 0),
      'D' => (16#FC#, 16#66#, 16#63#, 16#63#, 16#63#, 16#63#, 16#63#, 16#63#, 16#63#, 16#63#, 16#66#, 16#FC#, 0, 0),
      'E' => (16#FF#, 16#63#, 16#61#, 16#64#, 16#64#, 16#7C#, 16#64#, 16#64#, 16#60#, 16#61#, 16#63#, 16#FF#, 0, 0),
      'F' => (16#FF#, 16#63#, 16#61#, 16#64#, 16#64#, 16#7C#, 16#64#, 16#64#, 16#60#, 16#60#, 16#60#, 16#F0#, 0, 0),
      'G' => (16#3E#, 16#63#, 16#C1#, 16#C0#, 16#C0#, 16#C0#, 16#DF#, 16#C3#, 16#C3#, 16#C3#, 16#63#, 16#3D#, 0, 0),
      'H' => (16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#FF#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 0, 0),
      'I' => (16#3C#, 16#18#, 16#18#, 16#18#, 16#18#, 16#18#, 16#18#, 16#18#, 16#18#, 16#18#, 16#18#, 16#3C#, 0, 0),
      'J' => (16#0F#, 16#06#, 16#06#, 16#06#, 16#06#, 16#06#, 16#06#, 16#06#, 16#C6#, 16#C6#, 16#C6#, 16#7C#, 0, 0),                              
      'K' => (16#E3#, 16#63#, 16#63#, 16#63#, 16#66#, 16#7C#, 16#7C#, 16#66#, 16#63#, 16#63#, 16#63#, 16#E3#, 0, 0),
      'L' => (16#F0#, 16#60#, 16#60#, 16#60#, 16#60#, 16#60#, 16#60#, 16#60#, 16#60#, 16#61#, 16#63#, 16#FF#, 0, 0),
      'M' => (16#C3#, 16#E7#, 16#FF#, 16#FF#, 16#DB#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 0, 0), 
      'N' => (16#C3#, 16#E3#, 16#F3#, 16#FB#, 16#DF#, 16#CF#, 16#C7#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 0, 0),
      'O' => (16#7E#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#7E#, 0, 0),
      'P' => (16#FE#, 16#63#, 16#63#, 16#63#, 16#63#, 16#7E#, 16#60#, 16#60#, 16#60#, 16#60#, 16#60#, 16#F0#, 0, 0),
      'Q' => (16#7E#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#CB#, 16#CF#, 16#7E#, 16#06#, 16#07#), 
      'R' => (16#FE#, 16#63#, 16#63#, 16#63#, 16#63#, 16#7E#, 16#66#, 16#63#, 16#63#, 16#63#, 16#63#, 16#E3#, 0, 0),
      'S' => (16#7E#, 16#C3#, 16#C3#, 16#60#, 16#38#, 16#0C#, 16#06#, 16#03#, 16#03#, 16#C3#, 16#C3#, 16#7E#, 0, 0),
      'T' => (16#FF#, 16#DB#, 16#99#, 16#18#, 16#18#, 16#18#, 16#18#, 16#18#, 16#18#, 16#18#, 16#18#, 16#3C#, 0, 0),
      'U' => (16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#7E#, 0, 0),
      'V' => (16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#66#, 16#3C#, 16#18#, 0, 0),
      'W' => (16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#DB#, 16#DB#, 16#FF#, 16#66#, 16#66#, 0, 0),
      'X' => (16#C3#, 16#C3#, 16#C3#, 16#66#, 16#3C#, 16#18#, 16#18#, 16#3C#, 16#66#, 16#C3#, 16#C3#, 16#C3#, 0, 0),
      'Y' => (16#C3#, 16#C3#, 16#C3#, 16#66#, 16#3C#, 16#18#, 16#18#, 16#18#, 16#18#, 16#18#, 16#18#, 16#3C#, 0, 0),
      'Z' => (16#FF#, 16#C3#, 16#83#, 16#06#, 16#0C#, 16#18#, 16#30#, 16#60#, 16#C0#, 16#C1#, 16#C3#, 16#FF#, 0, 0),
      ':' => (0, 0, 16#18#, 16#18#, 0, 0, 0, 0, 16#18#, 16#18#, 0, 0, 0, 0), 
      others => (others => 0)
);

function Get_Character(C : Character) return Text_Array is
   begin
      return My_Font(C);
   end Get_Character;
end Graphics.Text;