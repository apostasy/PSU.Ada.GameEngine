package body Graphics.Text is 

-- This is declared as a fixed sized array in the ads file. Remember to adjust the range if you add to this table
CharacterTable : constant Text_Array_2D :=
     (
      (16#20#, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),                        -- ' '
      (16#30#, 16#7E#, 16#FF#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#,     -- '0'
       16#C3#, 16#C3#, 16#C3#, 16#FF#, 16#7E#),
      (16#31#, 16#38#, 16#78#, 16#F8#, 16#18#, 16#18#, 16#18#, 16#18#,     -- '1'
       16#18#, 16#18#, 16#18#, 16#18#, 16#18#),
      (16#32#, 16#7E#, 16#FF#, 16#83#, 16#06#, 16#0C#, 16#18#, 16#30#,     -- '2'
       16#60#, 16#C0#, 16#C1#, 16#FF#, 16#7E#),
      (16#33#, 16#7E#, 16#FF#, 16#83#, 16#03#, 16#03#, 16#1E#, 16#1E#,     -- '3'
       16#03#, 16#03#, 16#83#, 16#FF#, 16#7E#),
      (16#34#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#FF#, 16#7F#,     -- '4'
       16#03#, 16#03#, 16#03#, 16#03#, 16#03#),
      (16#35#, 16#FF#, 16#FF#, 16#C0#, 16#C0#, 16#C0#, 16#FE#, 16#7F#,     -- '5'
       16#03#, 16#03#, 16#83#, 16#FF#, 16#7F#),
      (16#36#, 16#C0#, 16#C0#, 16#C0#, 16#C0#, 16#C0#, 16#FE#, 16#FE#,     -- '6'
       16#C3#, 16#C3#, 16#C3#, 16#FF#, 16#7E#),
      (16#37#, 16#7E#, 16#FF#, 16#03#, 16#06#, 16#06#, 16#0C#, 16#0C#,     -- '7'
       16#18#, 16#18#, 16#30#, 16#30#, 16#60#),
      (16#38#, 16#7E#, 16#FF#, 16#C3#, 16#C3#, 16#C3#, 16#7E#, 16#7E#,     -- '8'
       16#C3#, 16#C3#, 16#C3#, 16#FF#, 16#7E#),
      (16#39#, 16#7E#, 16#FF#, 16#C3#, 16#C3#, 16#C3#, 16#7F#, 16#7F#,     -- '9'
       16#03#, 16#03#, 16#03#, 16#03#, 16#03#),
      (16#21#, 16#18#, 16#18#, 16#18#, 16#18#, 16#18#, 16#18#, 16#18#,     -- '!'
       16#18#, 16#18#, 16#00#, 16#18#, 16#18#),
      (16#41#, 16#18#, 16#3C#, 16#66#, 16#C3#, 16#C3#, 16#C3#, 16#FF#,     -- 'A'
       16#FF#, 16#C3#, 16#C3#, 16#C3#, 16#C3#),
      (16#42#, 16#FC#, 16#FE#, 16#C3#, 16#C3#, 16#C3#, 16#FE#, 16#FE#,     -- 'B'
       16#C3#, 16#C3#, 16#C3#, 16#FE#, 16#FC#),
      (16#43#, 16#7E#, 16#FF#, 16#C1#, 16#C0#, 16#C0#, 16#C0#, 16#C0#,     -- 'C'
       16#C0#, 16#C0#, 16#C1#, 16#FF#, 16#7E#),
      (16#44#, 16#FC#, 16#FE#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#,     -- 'D'
       16#C3#, 16#C3#, 16#C3#, 16#FE#, 16#FC#),
      (16#45#, 16#FF#, 16#FF#, 16#C0#, 16#C0#, 16#C0#, 16#FE#, 16#FE#,     -- 'E'
       16#C0#, 16#C0#, 16#C0#, 16#FF#, 16#FF#),
      (16#46#, 16#FF#, 16#FF#, 16#C0#, 16#C0#, 16#C0#, 16#FE#, 16#FE#,     -- 'F'
       16#C0#, 16#C0#, 16#C0#, 16#C0#, 16#C0#),
      (16#47#, 16#3C#, 16#7E#, 16#C1#, 16#C0#, 16#C0#, 16#C0#, 16#DE#,     -- 'G'
       16#C3#, 16#C3#, 16#C3#, 16#7E#, 16#3C#),
      (16#48#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#FF#, 16#FF#,     -- 'H'
       16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#),
      (16#49#, 16#18#, 16#18#, 16#18#, 16#18#, 16#18#, 16#18#, 16#18#,     -- 'I'
       16#18#, 16#18#, 16#18#, 16#18#, 16#18#),
      (16#4A#, 0,0,0,0,0,0,0,0,0,0,0,0),                                   -- Placeholder for J
      (16#4B#, 16#C3#, 16#C7#, 16#CE#, 16#DC#, 16#F8#, 16#F0#, 16#F0#,     -- 'K'
       16#F8#, 16#DC#, 16#CE#, 16#C7#, 16#C3#),
      (16#4C#, 16#C0#, 16#C0#, 16#C0#, 16#C0#, 16#C0#, 16#C0#, 16#C0#,     -- 'L'
       16#C0#, 16#C0#, 16#C0#, 16#FF#, 16#FF#),
      (16#4D#, 16#C3#, 16#C3#, 16#E7#, 16#E7#, 16#DB#, 16#DB#, 16#DB#,  
       16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#),  -- 'M'
      (16#4E#, 16#E3#, 16#E3#, 16#E3#, 16#D3#, 16#D3#, 16#D3#, 16#CB#,     -- 'N'
       16#CB#, 16#CB#, 16#C7#, 16#C7#, 16#C7#),
      (16#4F#, 16#3C#, 16#7E#, 16#E7#, 16#C3#, 16#C3#, 16#C3#, 16#C3#,     -- 'O'
       16#C3#, 16#C3#, 16#E7#, 16#7E#, 16#3C#),
      (16#50#, 16#FF#, 16#FF#, 16#C3#, 16#C3#, 16#C3#, 16#FF#, 16#FF#,     -- 'P'
       16#C0#, 16#C0#, 16#C0#, 16#C0#, 16#C0#),
      (16#51#, 0,0,0,0,0,0,0,0,0,0,0,0),                                   -- Placeholder for Q
      (16#52#, 16#FE#, 16#FF#, 16#C3#, 16#C3#, 16#C3#, 16#FF#, 16#FE#,     -- 'R'
       16#F0#, 16#D8#, 16#CC#, 16#C6#, 16#C3#),
      (16#53#, 16#3E#, 16#7F#, 16#C0#, 16#C0#, 16#C0#, 16#7C#, 16#3E#,     -- 'S'
       16#03#, 16#03#, 16#03#, 16#FE#, 16#7C#),
      (16#54#, 16#FF#, 16#FF#, 16#99#, 16#18#, 16#18#, 16#18#, 16#18#,     -- 'T'
       16#18#, 16#18#, 16#18#, 16#18#, 16#18#),
      (16#55#, 0,0,0,0,0,0,0,0,0,0,0,0),                                   -- Placeholder for U
      (16#56#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#C3#,     -- 'V'
       16#66#, 16#66#, 16#66#, 16#18#, 16#18#),
      (16#57#, 16#C3#, 16#C3#, 16#C3#, 16#C3#, 16#99#, 16#99#, 16#A5#,     -- 'W'
       16#A5#, 16#A5#, 16#C3#, 16#C3#, 16#C3#),
      (16#58#, 16#C3#, 16#C3#, 16#E7#, 16#66#, 16#66#, 16#18#, 16#18#,     -- 'X'
       16#66#, 16#66#, 16#E7#, 16#C3#, 16#C3#),
      (16#59#, 16#C3#, 16#C3#, 16#C3#, 16#66#, 16#66#, 16#3C#, 16#18#,     -- 'Y'
       16#18#, 16#18#, 16#18#, 16#18#, 16#18#),
      (16#5A#, 0,0,0,0,0,0,0,0,0,0,0,0)                                    -- Placeholder for Z
     );

   function Binary_Search(Low, High : Natural; B : Text) return Text_Array is

   begin
      if High >= Low then
         Mid : Natural := Low + (High - Low) / 2;
         if CharacterTable(Mid)(0) = B then
            return CharacterTable(Mid);
         end if;
         if CharacterTable(Mid)(0) > B then
            return Binary_Search (Low, Mid - 1, B);
         end if;
         return Binary_Search(Mid + 1, High, B);
      end if;
      return (others => 16#00#);  -- returns an array of 0s if nothing is found
   end Binary_Search;

   function Get_Character(C : Character) return Text_Array is
      Char_Hex_Value : Text;
   begin
      Char_Hex_Value := Text'Value(Integer'Image(Character'Pos(C)));
      return Binary_Search(0, CharacterTable'Length - 1, Char_Hex_Value);
   end Get_Character;


end Graphics.Text;